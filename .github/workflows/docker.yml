name: "build-and-push-docker-image"
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  BEFORE_SHA: ${{ github.event.before }}
  BOSSY_ECR_REGISTRY: public.ecr.aws/h1u4b2i4/cloudposse/bossy
  BOSSY_TEST_TAG: bossy:test
  IAM_ROLE_ARN_ECR: arn:aws:iam::847349463865:role/cplive-core-ue1-public-ecr-public-github-action
  IAM_ROLE_ARN_S3: arn:aws:iam::847349463865:role/cplive-core-ue2-public-bossy-artifacts-github-action
  IAM_ROLE_SEESION_NAME: cloudposse/bossy/ci
  S3_BUCKET: cplive-core-ue2-public-bossy-artifacts

jobs:
  build-test-distribute:
    runs-on: ubuntu-latest
    steps:
      ##################################################
      # Setup GHA Dependencies
      ##################################################
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Set up Docker Buildx (required for docker/build-push-action)
        uses: docker/setup-buildx-action@v2

      ##################################################
      # Configure AWS
      ##################################################
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.IAM_ROLE_ARN_ECR }}
          role-session-name: ${{ env.IAM_ROLE_SESSION_NAME }}
      - name: Login to Public Amazon ECR
        run: |
          aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws
        shell: bash

      ##################################################
      # Checkout the repository
      ##################################################
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch main branch so we can compare SHA
        run: git fetch origin main

      ##################################################
      # Install App Dependencies, Build, Lint, and Test
      ##################################################
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Lint Affected Projects
        shell: bash
        run: npx nx run-many --target=lint --all

      - name: Test Affected Projects
        shell: bash
        run: npx nx run-many --target=test --all

      - name: Build Affected Projects
        shell: bash
        run: npx nx run-many --target=build --prod --all

      ##################################################
      # Build and Push Bossy Docker Image
      ##################################################
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.BOSSY_ECR_REGISTRY }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=sha,prefix=,format=long,enable=${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Build bossy Docker image
        id: docker_build_tagged
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: apps/bossy/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      ##################################################
      # Build and Upload Bossy Lambda Zip
      ##################################################
      - name: install Bossy Lambda Dependencies
        run: |
          cd dist/apps/bossy && \
          yarn install
        shell: bash
      - name: Create Zip File
        run: |
          cd dist/apps/bossy && \ 
          zip -r lambda.zip . && \
          mv ./lambda.zip $GITHUB_WORKSPACE/lambda.zip
        shell: bash
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-2
          role-to-assume: ${{ env.IAM_ROLE_ARN_S3 }}
          role-session-name: ${{ env.IAM_ROLE_SESSION_NAME }}
      - name: Copy Lambda to S3
        run: |
          aws s3 cp ./lambda.zip s3://${{env.S3_BUCKET}}/bossy/ --region ${{ env.AWS_REGION }}
        shell: bash
